From c3036c497f29f4acf6423a88f59963781af3eafd Mon Sep 17 00:00:00 2001
From: Bruce Richardson <bruce.richardson@intel.com>
Date: Fri, 21 Oct 2022 15:37:02 +0800
Subject: [PATCH 186/189] telemetry: add escaping of strings in dicts
MIME-Version: 1.0
Content-Type: text/plain; charset=UTF-8
Content-Transfer-Encoding: 8bit

When strings are added to an dict variable, we need to properly escape
the invalid json characters in the strings.

Signed-off-by: Bruce Richardson <bruce.richardson@intel.com>
Acked-by: Ciara Power <ciara.power@intel.com>
Acked-by: Morten Br√∏rup <mb@smartsharesystems.com>
Acked-by: Chengwen Feng <fengchengwen@huawei.com>
---
 lib/telemetry/telemetry_json.h | 12 ++++++++----
 1 file changed, 8 insertions(+), 4 deletions(-)

diff --git a/lib/telemetry/telemetry_json.h b/lib/telemetry/telemetry_json.h
index c4442a0bf0..e3fae7c30d 100644
--- a/lib/telemetry/telemetry_json.h
+++ b/lib/telemetry/telemetry_json.h
@@ -54,7 +54,7 @@ static const char control_chars[0x20] = {
  * @internal
  * This function acts the same as __json_snprintf(buf, len, "%s%s%s", prefix, str, suffix)
  * except that it does proper escaping of "str" as necessary. Prefix and suffix should be compile-
- * time constants not needing escaping.
+ * time constants, or values not needing escaping.
  * Drops any invalid characters we don't support
  */
 static inline int
@@ -219,12 +219,16 @@ static inline int
 rte_tel_json_add_obj_str(char *buf, const int len, const int used,
 		const char *name, const char *val)
 {
+	char tmp_name[RTE_TEL_MAX_STRING_LEN + 5];
 	int ret, end = used - 1;
+
+	/* names are limited to certain characters so need no escaping */
+	snprintf(tmp_name, sizeof(tmp_name), "{\"%s\":\"", name);
 	if (used <= 2) /* assume empty, since minimum is '{}' */
-		return __json_snprintf(buf, len, "{\"%s\":\"%s\"}", name, val);
+		return __json_format_str(buf, len, tmp_name, val, "\"}");
 
-	ret = __json_snprintf(buf + end, len - end, ",\"%s\":\"%s\"}",
-			name, val);
+	tmp_name[0] = ',';  /* replace '{' with ',' at start */
+	ret = __json_format_str(buf + end, len - end, tmp_name, val, "\"}");
 	return ret == 0 ? used : end + ret;
 }
 
-- 
2.23.0

